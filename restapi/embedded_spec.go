// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Calendar api",
    "version": "1.0.0"
  },
  "paths": {
    "/event/create": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/EventCreateResponse"
            }
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/event/info": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "event_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "user_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/event/room/create": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "required": [
                "room_id"
              ],
              "properties": {
                "room_id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/invitation/update": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvitationUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Update failed"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/user_events": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "user_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_start",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_end",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserEventsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UsersCreateResponse"
            }
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/users/free_slot": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersFreeSlotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UsersFreeSlotResponse"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Fail"
          }
        }
      }
    },
    "/users/info": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "user_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "500": {
            "description": "Fetching info failed"
          }
        }
      }
    }
  },
  "definitions": {
    "Accepted": {
      "type": "string",
      "enum": [
        "yes",
        "no",
        "maybe"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EventCreateResponse": {
      "type": "object",
      "required": [
        "event_id"
      ],
      "properties": {
        "event_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EventInfo": {
      "type": "object",
      "required": [
        "name",
        "creator",
        "time_start",
        "time_end",
        "visibility"
      ],
      "properties": {
        "creator": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "event_link": {
          "type": "string"
        },
        "event_room": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Participant"
          }
        },
        "repeat": {
          "type": "string",
          "enum": [
            "day",
            "workday",
            "week",
            "month",
            "year"
          ]
        },
        "time_end": {
          "type": "string",
          "format": "date-time"
        },
        "time_start": {
          "type": "string",
          "format": "date-time"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "all",
            "participants"
          ]
        }
      },
      "additionalProperties": false
    },
    "InvitationUpdateRequest": {
      "type": "object",
      "required": [
        "user_id",
        "event_id",
        "accepted"
      ],
      "properties": {
        "accepted": {
          "$ref": "#/definitions/Accepted"
        },
        "event_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Notification": {
      "type": "object",
      "required": [
        "before_start",
        "step",
        "method"
      ],
      "properties": {
        "before_start": {
          "type": "integer",
          "minimum": 1
        },
        "method": {
          "type": "string",
          "enum": [
            "email",
            "sms",
            "telegram"
          ]
        },
        "step": {
          "type": "string",
          "enum": [
            "m",
            "h",
            "d",
            "w"
          ]
        }
      },
      "additionalProperties": false
    },
    "Participant": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "accepted": {
          "$ref": "#/definitions/Accepted"
        },
        "user_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UserEventsResponse": {
      "type": "object",
      "required": [
        "event_ids"
      ],
      "properties": {
        "event_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "email",
        "phone"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "pattern": "\\+\\d{8,20}"
        },
        "user_id": {
          "type": "string"
        },
        "workday_end": {
          "type": "string",
          "example": "20:00"
        },
        "workday_start": {
          "type": "string",
          "example": "10:00"
        }
      },
      "additionalProperties": false
    },
    "UsersCreateResponse": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UsersFreeSlotRequest": {
      "type": "object",
      "required": [
        "user_ids",
        "slot_interval_min",
        "from"
      ],
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "slot_interval_min": {
          "type": "integer"
        },
        "user_ids": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "UsersFreeSlotResponse": {
      "type": "object",
      "required": [
        "time_start",
        "time_end"
      ],
      "properties": {
        "time_end": {
          "type": "string",
          "format": "date-time"
        },
        "time_start": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Calendar api",
    "version": "1.0.0"
  },
  "paths": {
    "/event/create": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/EventCreateResponse"
            }
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/event/info": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "event_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "user_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/event/room/create": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "required": [
                "room_id"
              ],
              "properties": {
                "room_id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/invitation/update": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvitationUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Update failed"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/user_events": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "user_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_start",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_end",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserEventsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UsersCreateResponse"
            }
          },
          "500": {
            "description": "Creation failed"
          }
        }
      }
    },
    "/users/free_slot": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersFreeSlotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UsersFreeSlotResponse"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Fail"
          }
        }
      }
    },
    "/users/info": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "user_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "500": {
            "description": "Fetching info failed"
          }
        }
      }
    }
  },
  "definitions": {
    "Accepted": {
      "type": "string",
      "enum": [
        "yes",
        "no",
        "maybe"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EventCreateResponse": {
      "type": "object",
      "required": [
        "event_id"
      ],
      "properties": {
        "event_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EventInfo": {
      "type": "object",
      "required": [
        "name",
        "creator",
        "time_start",
        "time_end",
        "visibility"
      ],
      "properties": {
        "creator": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "event_link": {
          "type": "string"
        },
        "event_room": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Participant"
          }
        },
        "repeat": {
          "type": "string",
          "enum": [
            "day",
            "workday",
            "week",
            "month",
            "year"
          ]
        },
        "time_end": {
          "type": "string",
          "format": "date-time"
        },
        "time_start": {
          "type": "string",
          "format": "date-time"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "all",
            "participants"
          ]
        }
      },
      "additionalProperties": false
    },
    "InvitationUpdateRequest": {
      "type": "object",
      "required": [
        "user_id",
        "event_id",
        "accepted"
      ],
      "properties": {
        "accepted": {
          "$ref": "#/definitions/Accepted"
        },
        "event_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Notification": {
      "type": "object",
      "required": [
        "before_start",
        "step",
        "method"
      ],
      "properties": {
        "before_start": {
          "type": "integer",
          "minimum": 1
        },
        "method": {
          "type": "string",
          "enum": [
            "email",
            "sms",
            "telegram"
          ]
        },
        "step": {
          "type": "string",
          "enum": [
            "m",
            "h",
            "d",
            "w"
          ]
        }
      },
      "additionalProperties": false
    },
    "Participant": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "accepted": {
          "$ref": "#/definitions/Accepted"
        },
        "user_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UserEventsResponse": {
      "type": "object",
      "required": [
        "event_ids"
      ],
      "properties": {
        "event_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "email",
        "phone"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "pattern": "\\+\\d{8,20}"
        },
        "user_id": {
          "type": "string"
        },
        "workday_end": {
          "type": "string",
          "example": "20:00"
        },
        "workday_start": {
          "type": "string",
          "example": "10:00"
        }
      },
      "additionalProperties": false
    },
    "UsersCreateResponse": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UsersFreeSlotRequest": {
      "type": "object",
      "required": [
        "user_ids",
        "slot_interval_min",
        "from"
      ],
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "slot_interval_min": {
          "type": "integer"
        },
        "user_ids": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "UsersFreeSlotResponse": {
      "type": "object",
      "required": [
        "time_start",
        "time_end"
      ],
      "properties": {
        "time_end": {
          "type": "string",
          "format": "date-time"
        },
        "time_start": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    }
  }
}`))
}
