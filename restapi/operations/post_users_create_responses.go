// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"calendar/models"
)

// PostUsersCreateOKCode is the HTTP code returned for type PostUsersCreateOK
const PostUsersCreateOKCode int = 200

/*PostUsersCreateOK Ok

swagger:response postUsersCreateOK
*/
type PostUsersCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.UsersCreateResponse `json:"body,omitempty"`
}

// NewPostUsersCreateOK creates PostUsersCreateOK with default headers values
func NewPostUsersCreateOK() *PostUsersCreateOK {

	return &PostUsersCreateOK{}
}

// WithPayload adds the payload to the post users create o k response
func (o *PostUsersCreateOK) WithPayload(payload *models.UsersCreateResponse) *PostUsersCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users create o k response
func (o *PostUsersCreateOK) SetPayload(payload *models.UsersCreateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUsersCreateBadRequestCode is the HTTP code returned for type PostUsersCreateBadRequest
const PostUsersCreateBadRequestCode int = 400

/*PostUsersCreateBadRequest Creation failed

swagger:response postUsersCreateBadRequest
*/
type PostUsersCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostUsersCreateBadRequest creates PostUsersCreateBadRequest with default headers values
func NewPostUsersCreateBadRequest() *PostUsersCreateBadRequest {

	return &PostUsersCreateBadRequest{}
}

// WithPayload adds the payload to the post users create bad request response
func (o *PostUsersCreateBadRequest) WithPayload(payload *models.ErrorResponse) *PostUsersCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users create bad request response
func (o *PostUsersCreateBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
