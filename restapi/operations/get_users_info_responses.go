// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"calendar/models"
)

// GetUsersInfoOKCode is the HTTP code returned for type GetUsersInfoOK
const GetUsersInfoOKCode int = 200

/*GetUsersInfoOK Ok

swagger:response getUsersInfoOK
*/
type GetUsersInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserInfo `json:"body,omitempty"`
}

// NewGetUsersInfoOK creates GetUsersInfoOK with default headers values
func NewGetUsersInfoOK() *GetUsersInfoOK {

	return &GetUsersInfoOK{}
}

// WithPayload adds the payload to the get users info o k response
func (o *GetUsersInfoOK) WithPayload(payload *models.UserInfo) *GetUsersInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users info o k response
func (o *GetUsersInfoOK) SetPayload(payload *models.UserInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersInfoBadRequestCode is the HTTP code returned for type GetUsersInfoBadRequest
const GetUsersInfoBadRequestCode int = 400

/*GetUsersInfoBadRequest Creation failed

swagger:response getUsersInfoBadRequest
*/
type GetUsersInfoBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetUsersInfoBadRequest creates GetUsersInfoBadRequest with default headers values
func NewGetUsersInfoBadRequest() *GetUsersInfoBadRequest {

	return &GetUsersInfoBadRequest{}
}

// WithPayload adds the payload to the get users info bad request response
func (o *GetUsersInfoBadRequest) WithPayload(payload *models.ErrorResponse) *GetUsersInfoBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users info bad request response
func (o *GetUsersInfoBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersInfoBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
