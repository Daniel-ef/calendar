// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UsersFreeSlotRequest users free slot request
//
// swagger:model UsersFreeSlotRequest
type UsersFreeSlotRequest struct {

	// from
	// Required: true
	// Format: date-time
	From *strfmt.DateTime `json:"from"`

	// slot interval min
	// Required: true
	SlotIntervalMin *int64 `json:"slot_interval_min"`

	// user ids
	// Required: true
	// Min Items: 1
	UserIds []string `json:"user_ids"`
}

// Validate validates this users free slot request
func (m *UsersFreeSlotRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSlotIntervalMin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UsersFreeSlotRequest) validateFrom(formats strfmt.Registry) error {

	if err := validate.Required("from", "body", m.From); err != nil {
		return err
	}

	if err := validate.FormatOf("from", "body", "date-time", m.From.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *UsersFreeSlotRequest) validateSlotIntervalMin(formats strfmt.Registry) error {

	if err := validate.Required("slot_interval_min", "body", m.SlotIntervalMin); err != nil {
		return err
	}

	return nil
}

func (m *UsersFreeSlotRequest) validateUserIds(formats strfmt.Registry) error {

	if err := validate.Required("user_ids", "body", m.UserIds); err != nil {
		return err
	}

	iUserIdsSize := int64(len(m.UserIds))

	if err := validate.MinItems("user_ids", "body", iUserIdsSize, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this users free slot request based on context it is used
func (m *UsersFreeSlotRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UsersFreeSlotRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UsersFreeSlotRequest) UnmarshalBinary(b []byte) error {
	var res UsersFreeSlotRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
